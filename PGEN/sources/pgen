: pgen - generate a parser.

: directory with pgen stuff
PGDIR=/grp/ai/paulk/summer/pgen

: initialise some variables
BN='.'
REMOVE=0
NEXT=0
STOP=0
USER=0

: scan the arguments
for i
do
	if /bin/test x$i = x-n
	then
		NEXT=1
	elif /bin/test x$i = x-i
	then
		REMOVE=1
	elif /bin/test x$i = x-u
	then
		USER=1
	else
		if /bin/test $BN != '.'
		then
			echo "pgen - illegal argument :" $i
		else
			BN=`basename $i .syn`
			if /bin/test $BN.syn != $i
			then
				echo "pgen - suffix must be '.syn'"
				STOP=1
			else
				if /bin/test ! -r $BN.syn
				then
					echo "pgen - cannot open '" $BN.syn "'"
					STOP=1
				fi
			fi
		fi
	fi
done


: check that a .syn file has been given.
if /bin/test $BN = '.'
then
	echo 'pgen - no syntax file given.'
	STOP=1
fi

: check .sm file
if /bin/test -r $BN.sm
then
	echo 'pgen - ' $BN.sm 'already exist.'
	STOP=1
fi

: check .ns file if necessary
if /bin/test $NEXT = 1
then
	if /bin/test ! -r $BN.ns
	then echo "pgen - cannot open '" $BN.ns "'"
		STOP=1
	fi
fi

: check .ud file if necessary
if /bin/test $USER = 1
then
	if /bin/test ! -r $BN.ud
	then echo "pgen - cannot open '" $BN.ud "'"
		STOP=1
	fi
fi


: abort if one or more checks failed
if /bin/test $STOP = 1
then
	echo "pgen - exit."
	exit 1
fi

: run the parsergenerator properly
if $PGDIR/pg  $BN.syn >$BN.syn.er
then
	rm $BN.syn.er
else
	cat $BN.syn.er
	rm $BN.syn.tb $BN.syn.rs $BN.syn.fs $BN.syn.co
	exit 1
fi

: compile the .sm file
echo '# used files:' >$BN.sm
ls -l $BN.syn $PGDIR/pg $PGDIR/pglib >> $BN.sm
if /bin/test $NEXT = 1
then
	ls -l $BN.ns >> $BN.sm
else
	ls -l $PGDIR/pglib.ns >> $BN.sm
fi
echo '#' >>$BN.sm
cat $PGDIR/pglib >>$BN.sm

if /bin/test $USER = 1
then
	echo "# user defined:" >>$BN.sm
	ls -l $BN.ud >> $BN.sm
	echo "#" >> $BN.sm
	cat $BN.ud >> $BN.sm
	echo "# end of" $BN.ud "#" >> $BN.sm
fi

cat $BN.syn.tb $BN.syn.fs $BN.syn.rs >> $BN.sm

if /bin/test $NEXT = 1
then
	cat $BN.ns >> $BN.sm
else
	cat $PGDIR/pglib.ns >> $BN.sm
fi
cat $BN.syn.co >> $BN.sm

: remove the intermediate files unless.....
if /bin/test $REMOVE != 1
then
	rm $BN.syn.tb $BN.syn.rs $BN.syn.fs $BN.syn.co
fi
